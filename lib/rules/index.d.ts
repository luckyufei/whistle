export function parse(text: any, root: any, _values: any): void;
export var append: any;
export var resolveSNICallback: any;
export var resolveHost: any;
export var resolveInternalHost: any;
export var resolveProxy: any;
export var resolveEnable: any;
export var hasReqScript: any;
export var resolveDisable: any;
export var resolvePipe: any;
export var resolveRule: any;
export var resolveResRules: any;
export var resolveBodyFilter: any;
export var lookupHost: any;
export var resolveLocalRule: any;
export var clearAppend: any;
export function disableDnsCache(): void;
export function getProxy(url: any, req: any, callback: any): any;
export function resolveResRulesFile(req: any, res: any, callback: any): void;
export function getClientCert(req: any, cb: any): any;
import Rules = require("./rules");
declare var resolveReqRules: any;
export function execRulesScript(script: any, req: any, res: any, body: any, pattern: any): "" | {
    rules: any;
    values: any;
};
export function resolveRulesFile(req: any, callback: any): void;
export function initHeaderRules(req: any, needBodyFilters: any): void;
export function initRules(req: any): any;
export { Rules, noop as parse, resolveReqRules as resolveRules };
